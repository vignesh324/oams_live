<?php

namespace Applications\USER\Controllers;

use CodeIgniter\Controller;

class BiddingSession extends Controller
{
	public function __construct()
	{
		helper(['url', 'curl']);
		$session = session();
		$session = session();
		$token = session()->get('access_token');
		if (empty($token)) {
			redirect()->route('user_login')->send();
			exit();
		}
	}
	public function index()
	{
		$url = @apiURL . "user/auction";
		$token = session()->get('access_token');
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$response = make_curl_request($url, $headers, 'GET');
		if (isset($response['error'])) {
			echo "cURL Error: " . $response['error'];
		} else {
			$response_data = json_decode($response, true);
		}

		//Get Active Menu
		$router = service('router');
		$active_main_arr  = explode("\\", $router->controllerName());
		//echo "<pre>"; print_r($active_main_arr); echo "</pre>"; exit;

		$data_sidebar['activemenu'] = $active_main_arr[4];
		$data['header'] = view('Applications\USER\Views\header', $data_sidebar);
		$data['sidebar'] = view('Applications\USER\Views\sidebar', $data_sidebar);
		$data['footer'] = view('Applications\USER\Views\footer', $data);

		return view('Applications\USER\Views\BiddingSession\index', [
			"data" => $data,
			"response_data" => $response_data['auction']
		]);
	}

	public function add()
	{
		$response_data = array();

		$url = @apiURL . "user/center";
		$urlw = @apiURL . "user/warehouse";
		$center_url = @apiURL . "user/centerGarden";
		$token = session()->get('access_token');

		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$center_response = make_curl_request($url, $headers, 'GET');
		if (isset($center_response['error'])) {
			echo "cURL Error: " . $center_response['error'];
		} else {

			$center_data = json_decode($center_response, true);
		}

		$w_response = make_curl_request($urlw, $headers, 'GET');
		if (isset($w_response['error'])) {
			echo "cURL Error: " . $w_response['error'];
		} else {

			$w_data = json_decode($w_response, true);
		}

		$warehouse_response_data = array();


		$warehouse_url = @apiURL . "user/auctionstockbiddingsession";
		$warehouse_response = make_curl_request($warehouse_url, $headers, 'GET');
		if (isset($response['error'])) {
			echo "cURL Error: " . $warehouse_response['error'];
		} else {
			$warehouse_response_data = json_decode($warehouse_response, true);
		}
		// $garden_response = make_curl_request($center_url, $headers, 'POST',$data);
		// if (isset($garden_response['error'])) {
		// 	echo "cURL Error: " . $garden_response['error'];
		// } else {

		// 	$garden_data = json_decode($garden_response, true);
		// }

		// echo '<pre>';
		// print_r($w_response);
		// exit;

		//Index
		//Get Active Menu
		$router = service('router');
		$active_main_arr  = explode("\\", $router->controllerName());
		//echo "<pre>"; print_r($active_main_arr); echo "</pre>"; exit;

		$data_sidebar['activemenu'] = $active_main_arr[4];
		$data['header'] = view('Applications\USER\Views\header', $data_sidebar);
		$data['sidebar'] = view('Applications\USER\Views\sidebar', $data_sidebar);
		$data['footer'] = view('Applications\USER\Views\footer', $data);

		return view('Applications\USER\Views\BiddingSession\add', [
			'data' => $data,
			'centers' => $center_data['center'],
			'warehouses' => $w_data['warehouse'],
			'auctionItems' => $warehouse_response_data['stock'],
			'url' => 	@basePath . "USER/BiddingSession/Store",
			'title' => 	"Add"
		]);
	}

	public function store()
	{
		// echo '<pre>';
		// echo ;exit;
		$url = @apiURL . "user/auction";
		$token = session()->get('access_token');

		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];
		$data = json_encode($this->request->getpost(), TRUE);
		// print_r($data);exit;


		$response = make_curl_request($url, $headers, 'POST', $data);
		// print_r($response);exit;

		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (isset($response_data['status']) && $response_data['status'] == 200)
				return json_encode($response_data);
			elseif (isset($response_data['status']) && $response_data['status'] == 422) { //change status code here

				$this->response->setStatusCode(422);
				if (isset($response_data['messages'])) {

					return json_encode(array('errors' => $response_data['messages']));
				} else {
					return json_encode(array('error' => "Unprocessable Entity: Validation Error"));
				}
			} else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code: " . $response_data));
			}
		}
	}

	public function edit()
	{
		$response_data = array();
		$id = $this->request->getpost('id');
		// echo "<pre>"; print_r($id); echo "</pre>"; exit;

		//Get Active Menu
		$router = service('router');
		$active_main_arr  = explode("\\", $router->controllerName());

		$data_sidebar['activemenu'] = $active_main_arr[4];
		$data['header'] = view('Applications\USER\Views\header', $data_sidebar);
		$data['sidebar'] = view('Applications\USER\Views\sidebar', $data_sidebar);
		$data['footer'] = view('Applications\USER\Views\footer', $data);

		return view('Applications\USER\Views\BiddingSession\edit', [
			'data' => $data,
			'url' => 	@basePath . "USER/BiddingSession/Update",
			'title' => 	"Edit",
			'id' =>  $id
		]);
	}



	public function update()
	{
		$id = $this->request->getpost('id');
		// echo $id;
		// exit;
		$url = @apiURL . "user/auction/" . $id;
		$token = session()->get('access_token');

		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];
		$data = json_encode($this->request->getpost(), TRUE);
		// echo $data;exit;


		$response = make_curl_request($url, $headers, 'PUT', $data);
		// print_r($response);exit;

		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (isset($response_data['status']) && $response_data['status'] == 200)
				return json_encode($response_data);
			elseif (isset($response_data['status']) && $response_data['status'] == 422) { //change status code here

				$this->response->setStatusCode(422);
				if (isset($response_data['messages'])) {

					return json_encode(array('errors' => $response_data['messages']));
				} else {
					return json_encode(array('error' => "Unprocessable Entity: Validation Error"));
				}
			} else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code: " . $response_data));
			}
		}
	}
	public function view($id)
	{
		$response_data = array();
		$id = base64_decode($id);

		$data_url = @apiURL . "user/auction/" . $id;

		$url = @apiURL . "user/center";
		$center_url = @apiURL . "user/centerGarden";
		$inward_url = @apiURL . "user/auction/getInvoices";

		$token = session()->get('access_token');

		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$center_response = make_curl_request($url, $headers, 'GET');
		if (isset($center_response['error'])) {
			echo "cURL Error: " . $center_response['error'];
		} else {

			$center_data = json_decode($center_response, true);
		}


		$data_response = make_curl_request($data_url, $headers, 'GET');
		if (isset($data_response['error'])) {
			echo "cURL Error: " . $data_response['error'];
		} else {

			$auction_data = json_decode($data_response, true);
		}

		$centerdata = [
			'center_id' => $auction_data['auction']['center_id'],
		];
		$centerdata = json_encode($centerdata, TRUE);
		$centergarden_response = make_curl_request($center_url, $headers, 'POST', $centerdata);

		if (isset($centergarden_response['error'])) {
			echo "cURL Error: " . $centergarden_response['error'];
		} else {

			$centergarden_data = json_decode($centergarden_response, true);
		}


		$inwarddata = [
			'center_id' => $auction_data['auction']['center_id'],
		];

		$inwarddata = json_encode($inwarddata, TRUE);


		$inward_response = make_curl_request($inward_url, $headers, 'POST', $inwarddata);

		if (isset($inward_response['error'])) {
			echo "cURL Error: " . $inward_response['error'];
		} else {

			$inward_data = json_decode($inward_response, true);
		}
		// echo "<pre>"; print_r($centergarden_data['data']);exit;

		//Get Active Menu
		$router = service('router');
		$active_main_arr  = explode("\\", $router->controllerName());

		$data_sidebar['activemenu'] = $active_main_arr[4];
		$data['header'] = view('Applications\USER\Views\header', $data_sidebar);
		$data['sidebar'] = view('Applications\USER\Views\sidebar', $data_sidebar);
		$data['footer'] = view('Applications\USER\Views\footer', $data);

		return view('Applications\USER\Views\BiddingSession\view', [
			'data' => $data,
			'centers' => $center_data['center'],
			'auction_data' => $auction_data['auction'],
			'centergarden_data' => $centergarden_data['data'],
			'inward_data' => $inward_data['data'],
			'title' => 	"View"
		]);
	}

	public function GetInwardItems()
	{
		$data = [
			'center_id' => $this->request->getpost('center_id'),
		];
		$data = json_encode($data, TRUE);
		$response_data = array();

		$url = @apiURL . "user/auction/getInvoices";
		$token = session()->get('access_token');

		// print_r($token);exit;
		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$response = make_curl_request($url, $headers, 'POST', $data);


		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (isset($response_data['status']) && $response_data['status'] == 200)
				return json_encode($response_data);
			elseif (isset($response_data['status']) && $response_data['status'] == 422) { //change status code here
				// print_r($response);exit;
				$this->response->setStatusCode(422);
				if (isset($response_data['messages'])) {

					return json_encode(array('errors' => $response_data['messages']));
				} else {
					return json_encode(array('error' => "Unprocessable Entity: Validation Error"));
				}
			} elseif (isset($response_data['status']) && $response_data['status'] == 404) {
				return json_encode($response_data);
			} else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code: " . $response_data['status']));
			}
		}
	}
	public function GetInwardItemsByWarehouseId()
	{
		$data = [
			'center_id' => $this->request->getpost('center_id'),
			'warehouse_id' => $this->request->getpost('warehouse_id'),
		];

		// print_r($data);exit;
		$data = json_encode($data, TRUE);
		$response_data = array();

		$url = @apiURL . "user/auction/getInvoicesByWarehouseId";
		$token = session()->get('access_token');

		// print_r($token);exit;
		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$response = make_curl_request($url, $headers, 'POST', $data);


		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (isset($response_data['status']) && $response_data['status'] == 200)
				return json_encode($response_data);
			elseif (isset($response_data['status']) && $response_data['status'] == 422) { //change status code here
				// print_r($response);exit;
				$this->response->setStatusCode(422);
				if (isset($response_data['messages'])) {

					return json_encode(array('errors' => $response_data['messages']));
				} else {
					return json_encode(array('error' => "Unprocessable Entity: Validation Error"));
				}
			} elseif (isset($response_data['status']) && $response_data['status'] == 404) {
				return json_encode($response_data);
			} else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code: " . $response_data['status']));
			}
		}
	}
	public function GetCenterGardens()
	{

		$data = [
			'center_id' => $this->request->getpost('center_id'),
		];
		$data = json_encode($data, TRUE);
		$response_data = array();

		$url = @apiURL . "user/centerGarden";
		$token = session()->get('access_token');

		// print_r($token);exit;
		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$response = make_curl_request($url, $headers, 'POST', $data);



		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (isset($response_data['status']) && $response_data['status'] == 200)
				return json_encode($response_data);
			elseif (isset($response_data['status']) && $response_data['status'] == 422) { //change status code here
				// print_r($response);exit;
				$this->response->setStatusCode(422);
				if (isset($response_data['messages'])) {

					return json_encode(array('errors' => $response_data['messages']));
				} else {
					return json_encode(array('error' => "Unprocessable Entity: Validation Error"));
				}
			} elseif (isset($response_data['status']) && $response_data['status'] == 404) {
				return json_encode($response_data);
			} else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code: " . $response_data['status']));
			}
		}
	}

	public function GetInwardItemDetails()
	{

		$data = [
			'invoice_id' => $this->request->getpost('invoice_id'),
		];

		$response_data = array();

		$url = @apiURL . "user/inward/item/" . $data['invoice_id'];
		$token = session()->get('access_token');

		// Include the token in the headers
		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$response = make_curl_request($url, $headers, 'GET');

		//print_r($response);exit;

		if (isset($response['error'])) {
			$this->response->setStatusCode(500);
			return "cURL Error: " . $response['error'];
		} else {

			$response_data = json_decode($response, true);

			if (!empty($response_data))
				return json_encode($response_data);
			else {
				$this->response->setStatusCode(500);
				return json_encode(array('error' => "Unexpected status code "));
			}
		}
	}


	public function reOrderBiddingSession()
	{
		// echo 'hii';
		// exit;
		$url = @apiURL . "user/reOrderBiddingSession";
		$token = session()->get('access_token');

		$headers = [
			'Content-Type: application/json',
			'Authorization: Bearer ' . $token,
		];

		$data = file_get_contents("php://input");
		$response = make_curl_request($url, $headers, 'POST', $data);

		// print_r($response);exit;
		return json_encode(['status' => 200, 'message' => 'Reordered Successfully', 'response' => $response]);
	}
}
